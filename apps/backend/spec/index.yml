openapi: 3.1.0
info:
  title: Ordexa API
  version: 1.0.0

paths:
  /order/create:
    post:
      summary: Create a new order
      operationId: createOrder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderInput"
      responses:
        "201":
          description: Order created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  orderId:
                    type: string
                    format: uuid
        "400":
          description: Invalid request
        "500":
          description: Internal server error

  /orders/{userId}:
    get:
      summary: Get orders by userId (Cassandra read model)
      operationId: getOrdersByUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 25
        - name: pagingState
          in: query
          required: false
          schema:
            type: string
        - name: offset
          in: query
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  orders:
                    type: array
                    items:
                      $ref: '#/components/schemas/Order'
                  pagingState:
                    type: string
                  limit:
                    type: integer
        '400':
          description: Bad Request
        '500':
          description: Server Error

components:
  schemas:
    OrderInput:
      type: object
      required:
        - userId
        - totalAmount
        - status
      properties:
        userId:
          type: string
          format: uuid
        totalAmount:
          type: number
        status:
          type: string
        description:
          type: string

    Order:
      type: object
      properties:
        orderId:
          type: string
        userId:
          type: string
        status:
          type: string
        description:
          type: string
        totalAmount:
          type: number
        createdAt:
          type: string
          format: date-time
